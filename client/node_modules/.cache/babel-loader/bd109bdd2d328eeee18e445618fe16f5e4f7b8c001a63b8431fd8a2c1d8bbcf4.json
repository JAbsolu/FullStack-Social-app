{"ast":null,"code":"var _jsxFileName = \"/Users/johnson/Desktop/social-app/client/src/scenes/widgets/PostsWidgets.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setPosts } from \"../../state\";\nimport PostWidget from './postWidget';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PostsWidget = _ref => {\n  _s();\n  let {\n    userId,\n    isProfile = false\n  } = _ref;\n  const dispatch = useDispatch();\n  const posts = useSelector(state => state.posts);\n  const token = useSelector(state => state.token);\n  const getPosts = async () => {\n    const response = await fetch(\"http://localhost:3001/posts\", {\n      method: \"GET\",\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    const data = await response.json();\n    dispatch(setPosts({\n      posts: data\n    }));\n  };\n  const getUserPosts = async () => {\n    const response = await fetch(`http://localhost:3001/posts/${userId}/posts`, {\n      method: \"GET\",\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    const data = await response.json();\n    dispatch(setPosts({\n      posts: data\n    }));\n  };\n  useEffect(() => {\n    if (isProfile) {\n      getUserPosts();\n    } else {\n      getPosts();\n    }\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: posts.map(_ref2 => {\n      let {\n        _id,\n        userId,\n        firstName,\n        lastName,\n        description,\n        location,\n        picturePath,\n        userPicturePath,\n        likes,\n        comments\n      } = _ref2;\n      return /*#__PURE__*/_jsxDEV(PostWidget, {\n        postId: _id,\n        postUserId: userId,\n        name: `${firstName} ${lastName}`,\n        description: description,\n        location: location,\n        picturePath: picturePath,\n        userPicturePath: userPicturePath,\n        likes: likes,\n        comments: comments\n      }, _id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this);\n    })\n  }, void 0, false);\n};\n_s(PostsWidget, \"7TqOh3V0nCSP3QUJlbitnmq7L8o=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n_c = PostsWidget;\nexport default PostsWidget;\nvar _c;\n$RefreshReg$(_c, \"PostsWidget\");","map":{"version":3,"names":["useEffect","useDispatch","useSelector","setPosts","PostWidget","jsxDEV","_jsxDEV","Fragment","_Fragment","PostsWidget","_ref","_s","userId","isProfile","dispatch","posts","state","token","getPosts","response","fetch","method","headers","Authorization","data","json","getUserPosts","children","map","_ref2","_id","firstName","lastName","description","location","picturePath","userPicturePath","likes","comments","postId","postUserId","name","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/johnson/Desktop/social-app/client/src/scenes/widgets/PostsWidgets.jsx"],"sourcesContent":["import { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setPosts } from \"../../state\";\nimport PostWidget from './postWidget';\n\nconst PostsWidget = ({ userId, isProfile = false }) => {\n    const dispatch = useDispatch();\n    const posts = useSelector((state) => state.posts);\n    const token = useSelector((state) => state.token);\n\n    const getPosts = async () => {\n        const response = await fetch(\"http://localhost:3001/posts\", {\n            method: \"GET\",\n            headers: { Authorization: `Bearer ${token}`}\n        });\n        const data = await response.json();\n        dispatch(setPosts({ posts: data }));\n    }\n\n    const getUserPosts = async () => {\n        const response = await fetch(`http://localhost:3001/posts/${userId}/posts`, {\n            method: \"GET\",\n            headers: { Authorization: `Bearer ${token}`}\n        });\n        const data = await response.json();\n        dispatch(setPosts({ posts: data }));\n    };\n\n    useEffect(() => {\n        if (isProfile) {\n            getUserPosts();\n        } else {\n            getPosts();\n        }\n    }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n    return (\n        <>\n        {posts.map(\n            ({\n                _id,\n                userId,\n                firstName,\n                lastName,\n                description,\n                location,\n                picturePath,\n                userPicturePath,\n                likes,\n                comments,\n            }) => (\n                <PostWidget\n                    key={_id}\n                    postId={_id}\n                    postUserId={userId}\n                    name={`${firstName} ${lastName}`}\n                    description={description}\n                    location={location}\n                    picturePath={picturePath}\n                    userPicturePath={userPicturePath}\n                    likes={likes}\n                    comments={comments}\n                />\n            )\n        )}\n        </>\n    )\n};\n\nexport default PostsWidget;"],"mappings":";;AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,QAAQ,QAAQ,aAAa;AACtC,OAAOC,UAAU,MAAM,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEtC,MAAMC,WAAW,GAAGC,IAAA,IAAmC;EAAAC,EAAA;EAAA,IAAlC;IAAEC,MAAM;IAAEC,SAAS,GAAG;EAAM,CAAC,GAAAH,IAAA;EAC9C,MAAMI,QAAQ,GAAGb,WAAW,EAAE;EAC9B,MAAMc,KAAK,GAAGb,WAAW,CAAEc,KAAK,IAAKA,KAAK,CAACD,KAAK,CAAC;EACjD,MAAME,KAAK,GAAGf,WAAW,CAAEc,KAAK,IAAKA,KAAK,CAACC,KAAK,CAAC;EAEjD,MAAMC,QAAQ,GAAG,MAAAA,CAAA,KAAY;IACzB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,6BAA6B,EAAE;MACxDC,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QAAEC,aAAa,EAAG,UAASN,KAAM;MAAC;IAC/C,CAAC,CAAC;IACF,MAAMO,IAAI,GAAG,MAAML,QAAQ,CAACM,IAAI,EAAE;IAClCX,QAAQ,CAACX,QAAQ,CAAC;MAAEY,KAAK,EAAES;IAAK,CAAC,CAAC,CAAC;EACvC,CAAC;EAED,MAAME,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC7B,MAAMP,QAAQ,GAAG,MAAMC,KAAK,CAAE,+BAA8BR,MAAO,QAAO,EAAE;MACxES,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QAAEC,aAAa,EAAG,UAASN,KAAM;MAAC;IAC/C,CAAC,CAAC;IACF,MAAMO,IAAI,GAAG,MAAML,QAAQ,CAACM,IAAI,EAAE;IAClCX,QAAQ,CAACX,QAAQ,CAAC;MAAEY,KAAK,EAAES;IAAK,CAAC,CAAC,CAAC;EACvC,CAAC;EAEDxB,SAAS,CAAC,MAAM;IACZ,IAAIa,SAAS,EAAE;MACXa,YAAY,EAAE;IAClB,CAAC,MAAM;MACHR,QAAQ,EAAE;IACd;EACJ,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,oBACIZ,OAAA,CAAAE,SAAA;IAAAmB,QAAA,EACCZ,KAAK,CAACa,GAAG,CACNC,KAAA;MAAA,IAAC;QACGC,GAAG;QACHlB,MAAM;QACNmB,SAAS;QACTC,QAAQ;QACRC,WAAW;QACXC,QAAQ;QACRC,WAAW;QACXC,eAAe;QACfC,KAAK;QACLC;MACJ,CAAC,GAAAT,KAAA;MAAA,oBACGvB,OAAA,CAACF,UAAU;QAEPmC,MAAM,EAAET,GAAI;QACZU,UAAU,EAAE5B,MAAO;QACnB6B,IAAI,EAAG,GAAEV,SAAU,IAAGC,QAAS,EAAE;QACjCC,WAAW,EAAEA,WAAY;QACzBC,QAAQ,EAAEA,QAAS;QACnBC,WAAW,EAAEA,WAAY;QACzBC,eAAe,EAAEA,eAAgB;QACjCC,KAAK,EAAEA,KAAM;QACbC,QAAQ,EAAEA;MAAS,GATdR,GAAG;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAUV;IAAA,CACL;EACJ,iBACE;AAEX,CAAC;AAAClC,EAAA,CA9DIF,WAAW;EAAA,QACIR,WAAW,EACdC,WAAW,EACXA,WAAW;AAAA;AAAA4C,EAAA,GAHvBrC,WAAW;AAgEjB,eAAeA,WAAW;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}